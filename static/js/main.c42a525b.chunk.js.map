{"version":3,"sources":["CountDown.js","CountUp.js","App.js","reportWebVitals.js","index.js"],"names":["Minus","props","countDown","onClick","Plus","countUp","App","state","count","customInput","number","value","parseInt","setState","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAeeA,EAZG,SAACC,GAAW,IACfC,EAAaD,EAAbC,UAIP,OACI,8BACI,wBAAQC,QAASD,EAAjB,kBCKDE,EAZE,SAACH,GAAW,IACdI,EAAWJ,EAAXI,QAIP,OACI,8BACI,wBAAQF,QAAUE,EAAlB,kBCiCDC,E,4MAtCXC,MAAQ,CACNC,MAAO,G,EAIXC,YAAc,SAACC,GACb,IAAIC,EAAQC,SAASF,GACrB,EAAKG,SAAS,CACZL,MAAO,EAAKD,MAAMC,MAAQG,K,EAK1BN,QAAU,WACV,EAAKQ,SAAS,CACZL,MAAO,EAAKD,MAAMC,MAAQ,K,EAIhCN,UAAU,WACR,EAAKW,SACH,CAACL,MAAO,EAAKD,MAAMC,MAAO,K,uDAM5B,OACE,gCACE,8BAAMM,KAAKP,MAAMC,QACjB,cAAC,EAAD,CAAMH,QAAWS,KAAKT,UACtB,cAAC,EAAD,CAAOH,UAAaY,KAAKZ,mB,GAhCfa,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c42a525b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n    const Minus = (props) => {\r\n        const {countDown} = props\r\n \r\n    \r\n    \r\n        return (\r\n            <div>\r\n                <button onClick={countDown}>-</button>\r\n            </div>\r\n        )\r\n    \r\n   }\r\nexport default Minus","import React from 'react'\r\n\r\n\r\n    const Plus = (props) => {\r\n        const {countUp} = props\r\n \r\n    \r\n    \r\n        return (\r\n            <div>\r\n                <button onClick={ countUp}>+</button>\r\n            </div>\r\n        )\r\n    \r\n   }\r\nexport default Plus","import React, {Component} from 'react';\nimport Minus from \"./CountDown\"\nimport Plus from \"./CountUp\"\n\nclass App extends Component{\n    state = {\n      count: 0\n    \n  }\n\n  customInput = (number) =>{\n    let value = parseInt(number)\n    this.setState({\n      count: this.state.count + value\n    })\n      \n  }\n\n      countUp = () => {\n      this.setState({\n        count: this.state.count + 1\n      })\n  }\n\n  countDown=() =>{\n    this.setState(\n      {count: this.state.count -1}\n    )\n  }\n\n  \n  render() {\n    return(\n      <div>\n        <div>{this.state.count}</div>\n        <Plus countUp = {this.countUp} />\n        <Minus countDown = {this.countDown} />\n\n       \n      </div>\n    )\n  }\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}